import funkin.modding.module.Module;
import funkin.modding.module.ModuleHandler;
import funkin.save.Save;
import funkin.util.FileUtil;
import funkin.util.FileWriteMode;
import funkin.util.MemoryUtil;
import funkin.util.PlatformUtil;
import funkin.util.SerializerUtil;
import haxe.ds.StringMap;
import thx.Maps;
import thx.Objects;

/**
 * A module to handle the save data for Funker Selector.
 * TODO: Rewrite this to be a singleton!
 * (ex. FS_SaveData.instance)
 */
class FS_SaveDataHandler extends Module
{
  /**
   * The save data for Funker Selector.
   * This holds Character IDs, Preferences and some other stuff.
   */
  public var saveData:Dynamic;

  /**
   * The `FS_SaveDataMigrator` module.
   */
  var FS_SaveDataMigrator:Module = ModuleHandler.getModule("FS_SaveDataMigrator");

  /**
   * The version for sava data.
   */
  var FS_SAVE_DATA_VERSION:String = FS_SaveDataMigrator.scriptGet("FS_SAVE_DATA_VERSION");

  public function new()
  {
    super('FS_SaveDataHandler', 100);
  }

  /**
   * Write save data to disk.
   */
  function writeSaveData():Void
  {
    Save.instance.modOptions.set("FunkerSelector", saveData);
    Save.instance.flush();
  }

  /**
   * Retrieves the Funker Selector save data.
   * @return The saved data as a dynamic object.
   */
  function initializeSaveData():Void
  {
    var defaultSaveData:Dynamic = FS_SaveDataMigrator.scriptCall("getDefaultSaveData");

    if (!Save.instance.modOptions.exists("FunkerSelector"))
    {
      Save.instance.modOptions.set("FunkerSelector", defaultSaveData);
      Save.instance.flush();
      saveData = defaultSaveData;

      trace('[Funker Selector] Successfully created save data:\n\n---Character IDs---\n\nBoyfriend: '
        + saveData.characterIDs.bf
        + '\nGirlfriend: '
        + saveData.characterIDs.gf
        + '\nOpponent: '
        + saveData.characterIDs.dad
        + '\n\n---Settings---\n\nSimplify UI: '
        + saveData.preferences.potatoMode
        + '\nPreload Sprites: '
        + saveData.preferences.preloadSprites
        + '\nPreferred SFX: '
        + saveData.preferences.preferredSFX
        + '\nDJ Replacement: '
        + saveData.preferences.djSwapping
        + '\n\n---Seen Unlock Animations---\n\n'
        + saveData.seenUnlocks);
    }
    else
    {
      saveData = ModuleHandler.getModule("FS_SaveDataMigrator").scriptCall("checkSaveData", [Save.instance.modOptions.get("FunkerSelector")]);

      trace('[Funker Selector] Successfully retrieved save data:\n\n---Character IDs---\n\nBoyfriend: '
        + saveData.characterIDs.bf
        + '\nGirlfriend: '
        + saveData.characterIDs.gf
        + '\nOpponent: '
        + saveData.characterIDs.dad
        + '\n\n---Settings---\n\nSimplify UI: '
        + saveData.preferences.potatoMode
        + '\nPreload Sprites: '
        + saveData.preferences.preloadSprites
        + '\nPreferred SFX: '
        + saveData.preferences.preferredSFX
        + '\nDJ Replacement: '
        + saveData.preferences.djSwapping
        + '\n\n---Seen Unlock Animations---\n\n'
        + saveData.seenUnlocks);
    }
  }

  /**
   * DEBUG: Loads save data from a JSON file.
   */
  function debug_loadSaveFromJSON():Void
  {
    if (!Assets.exists(Paths.json("FS_dumpedSave")))
    {
      trace("[Funker Selector] DEBUG: No JSON save data found!");
      return;
    }

    var parsedData:Dynamic = SerializerUtil.fromJSON(Assets.getText(Paths.json("FS_dumpedSave")));

    var saveObject:Dynamic =
      {
        characterIDs:
          {
            bf: parsedData.characterIDs.bf ?? 'default',
            gf: parsedData.characterIDs.gf ?? 'default',
            dad: parsedData.characterIDs.dad ?? 'default'
          },
        preferences: parsedData.preferences ?? {},
        seenUnlocks: parsedData.seenUnlocks ?? []
      };

    saveData = saveObject;

    writeSaveData();

    trace('[Funker Selector] DEBUG: Loaded save data from JSON:\n\n---Character IDs---\n\nBoyfriend: '
      + saveData.characterIDs.bf
      + '\nGirlfriend: '
      + saveData.characterIDs.gf
      + '\nOpponent: '
      + saveData.characterIDs.dad
      + '\n\n---Settings---\n\nSimplify UI: '
      + saveData.preferences.potatoMode
      + '\nPreload Sprites: '
      + saveData.preferences.preloadSprites
      + '\nPreferred SFX: '
      + saveData.preferences.preferredSFX
      + '\nDJ Replacement: '
      + saveData.preferences.djSwapping
      + '\n\n---Seen Unlock Animations---\n\n'
      + saveData.seenUnlocks);
  }

  /**
   * DEBUG: Writes Funker Selector save data to a JSON file.
   */
  function debug_dumpSave():Void
  {
    var fileString:String = PlatformUtil.isMacOS() ? "../../../../../../../" : "../../../../";
    var filePath:String = fileString + "example_mods/[V-Slice] Funker Selector/data/FS_dumpedSave.json";

    FileUtil.writeStringToPath(filePath, SerializerUtil.toJSON(saveData, true), FileWriteMode.Force);

    trace("[Funker Selector] DEBUG: Wrote save data to " + filePath);
  }
}
